#!/bin/bash

VERSION=
NO_NPM=
CHANGED=
DRY_RUN=
TAG_ONLY=

#
# usage()
# Prints the usage for this script
#
usage()
{
cat << EOF
usage: vbump options

This commits a version bump and tags it git, then published to npm.

OPTIONS:
   -v  [required] Version
   -t  Tag only. Do not git commit.
   -h  Show this message
   -p  Do not publish to npm.
   -d  Dry-run. No nothing but echo commands
EOF
}

#
# checkgit()
# Ensures everything is up-to-date
#
checkgit() {
  echo "Checking git for remote updates"
  git pull --dry-run | grep -q -v 'Already up-to-date.' && CHANGED=1

  if [ ! -z $CHANGED ]; then
    echo "You need to pull from the remote before continuing"
    echo "Run 'git pull origin master'"
    exit 1
  fi
}

#
# run(@)
# Runs `cmd` unless -d (i.e. DRY_RUN) is set.
#
function run () {
  echo "$@"
  if [ -z $DRY_RUN ]; then
    "$@"
  fi
}

while getopts "v:hpdt" OPTION; do
  case $OPTION in
    h)
      usage
      exit
      ;;
    d)
      echo "-d: Executing dry-run..."
      DRY_RUN=1
      ;;
    t)
      echo "-t: Skipping 'git commit'"
      TAG_ONLY=1
      ;;
    p)
      echo "-p: Skipping 'npm publish'"
      NO_NPM=1
      ;;
    v)
      VERSION=$OPTARG
      ;;
    \?)
      usage
      exit
      ;;
  esac
done

if [ -z $VERSION ]; then
  echo "No version specified. Use -v VERSION"
  usage
  exit
fi

# Check git remote(s)
checkgit

#
# Run git commit only if `-t` is not set
#
if [ -z $TAG_ONLY ]; then
  run "git add ."
  run "git commit -m '[dist] Version bump. $VERSION'"
  run "git push origin master"
fi

#
# Always tag since we are version bumping.
#
run "git tag -a 'v$VERSION' -m 'Version $VERSION'"
run "git push --tags"

# Check for a package.json
if [ -z $NO_NPM ]; then
  if [ ! -f 'package.json' ]; then
    echo "No package.json file. Skipping 'npm publish'"
  else
    run "npm publish"
  fi
fi